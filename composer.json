{
    "name": "woo-ai-assistant/woo-ai-assistant",
    "description": "AI-powered chatbot for WooCommerce that automatically creates a knowledge base from site content and provides 24/7 customer support.",
    "type": "wordpress-plugin",
    "license": "GPL-3.0-or-later",
    "version": "1.0.0",
    "authors": [
        {
            "name": "Claude Code Assistant",
            "role": "Developer"
        }
    ],
    "keywords": [
        "wordpress",
        "woocommerce",
        "ai",
        "chatbot",
        "customer-support",
        "knowledge-base"
    ],
    "homepage": "https://github.com/woo-ai-assistant/woo-ai-assistant",
    "require": {
        "php": ">=8.2.0",
        "composer/installers": "^2.0"
    },
    "require-dev": {
        "phpunit/phpunit": "^10.0",
        "squizlabs/php_codesniffer": "^3.7",
        "phpstan/phpstan": "^1.10",
        "phpmd/phpmd": "^2.13",
        "phpdocumentor/phpdocumentor": "^3.0",
        "wp-coding-standards/wpcs": "^3.0",
        "dealerdirect/phpcodesniffer-composer-installer": "^1.0",
        "phpcompatibility/php-compatibility": "^9.0",
        "roave/security-advisories": "dev-latest"
    },
    "autoload": {
        "psr-4": {
            "WooAiAssistant\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "WooAiAssistant\\Tests\\": "tests/"
        }
    },
    "config": {
        "optimize-autoloader": true,
        "classmap-authoritative": true,
        "apcu-autoloader": true,
        "allow-plugins": {
            "composer/installers": true,
            "dealerdirect/phpcodesniffer-composer-installer": true
        },
        "sort-packages": true
    },
    "scripts": {
        "install-dev": [
            "composer install --dev",
            "@setup-phpcs",
            "@setup-git-hooks"
        ],
        "setup-phpcs": [
            "phpcs --config-set installed_paths vendor/wp-coding-standards/wpcs,vendor/phpcompatibility/php-compatibility",
            "phpcs --config-set default_standard WordPress"
        ],
        "setup-git-hooks": [
            "bash scripts/setup-git-hooks.sh"
        ],
        "verify-all": [
            "@quality-gates-enforce"
        ],
        "verify-paths": [
            "bash scripts/verify-paths.sh"
        ],
        "verify-standards": [
            "php scripts/verify-standards.php"
        ],
        "mandatory-verification": [
            "bash scripts/mandatory-verification.sh"
        ],
        "quality-gates-enforce": [
            "bash scripts/quality-gates-enforcer.sh run"
        ],
        "quality-gates-check": [
            "bash scripts/quality-gates-enforcer.sh check"
        ],
        "quality-gates-reset": [
            "bash scripts/quality-gates-enforcer.sh reset"
        ],
        "phpcs": [
            "phpcs --standard=WordPress --extensions=php --ignore=vendor/,node_modules/,assets/ ."
        ],
        "phpcbf": [
            "phpcbf --standard=WordPress --extensions=php --ignore=vendor/,node_modules/,assets/ ."
        ],
        "phpstan": [
            "phpstan analyse src/ --level=8 --memory-limit=1G"
        ],
        "phpmd": [
            "phpmd src/ text phpmd.xml"
        ],
        "phpcpd": [
            "phpcpd src/ --min-lines=10 --min-tokens=50"
        ],
        "test": [
            "phpunit --configuration phpunit.xml --coverage-text --coverage-clover coverage.xml"
        ],
        "test:unit": [
            "phpunit --configuration phpunit.xml --testsuite unit"
        ],
        "test:integration": [
            "phpunit --configuration phpunit.xml --testsuite integration"
        ],
        "test:coverage": [
            "phpunit --configuration phpunit.xml --coverage-html coverage/html --coverage-clover coverage/clover.xml --coverage-text"
        ],
        "test:watch": [
            "phpunit-watcher watch"
        ],
        "security-check": [
            "composer audit --locked",
            "bash scripts/security-scan.sh"
        ],
        "security-scan": [
            "bash scripts/security-scan.sh"
        ],
        "performance-benchmark": [
            "bash scripts/performance-benchmark.sh"
        ],
        "deploy:staging": [
            "bash scripts/deploy.sh --type staging"
        ],
        "deploy:production": [
            "bash scripts/deploy.sh --type production"
        ],
        "docs": [
            "bash scripts/generate-docs.sh"
        ],
        "docs:api": [
            "phpdocumentor --directory=src --target=docs/api --config=phpdoc.xml --force"
        ],
        "i18n:make-pot": [
            "wp i18n make-pot . languages/woo-ai-assistant.pot --exclude=vendor,node_modules,tests,coverage"
        ],
        "i18n:update": [
            "@i18n:make-pot",
            "echo 'POT file updated successfully'"
        ],
        "seed-data": [
            "bash scripts/seed-data.sh"
        ],
        "seed-data:cleanup": [
            "bash scripts/seed-data.sh --cleanup"
        ],
        "quality": [
            "@phpcs",
            "@phpstan", 
            "@phpmd",
            "@phpcpd",
            "@test"
        ],
        "pre-commit": [
            "@mandatory-verification"
        ],
        "post-install-cmd": [
            "@setup-phpcs"
        ],
        "post-update-cmd": [
            "@setup-phpcs"
        ]
    },
    "scripts-descriptions": {
        "install-dev": "Install development dependencies and setup tools",
        "verify-all": "Run all verification checks (paths, standards, linting, testing)",
        "mandatory-verification": "Run comprehensive mandatory verification before task completion",
        "phpcs": "Run PHP CodeSniffer for WordPress coding standards",
        "phpcbf": "Automatically fix PHP CodeSniffer violations where possible",
        "phpstan": "Run PHPStan static analysis",
        "phpmd": "Run PHP Mess Detector",
        "phpcpd": "Run PHP Copy/Paste Detector", 
        "test": "Run PHPUnit tests with coverage",
        "test:unit": "Run only unit tests",
        "test:integration": "Run only integration tests",
        "test:coverage": "Generate comprehensive test coverage reports",
        "security-check": "Run security vulnerability checks",
        "docs": "Generate complete documentation including API docs",
        "docs:api": "Generate only API documentation with phpDocumentor",
        "i18n:make-pot": "Generate POT translation file from source code",
        "i18n:update": "Update POT translation file with latest strings",
        "seed-data": "Create development seed data for testing",
        "seed-data:cleanup": "Remove all development seed data",
        "quality": "Run all code quality checks",
        "pre-commit": "Run pre-commit verification (used by Git hooks)"
    },
    "extra": {
        "installer-name": "woo-ai-assistant"
    },
    "minimum-stability": "stable",
    "prefer-stable": true
}